---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: virtualmachines.deckhouse.io
spec:
  group: deckhouse.io
  names:
    kind: VirtualMachine
    listKind: VirtualMachineList
    plural: virtualmachines
    singular: virtualmachine
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VirtualMachine is the Schema for the virtualmachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VirtualMachineSpec defines the desired state of VirtualMachine
            properties:
              IPAddressReservationName:
                type: string
              cloudInit:
                description: 'Represents a cloud-init nocloud user data source. More
                  info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html'
                properties:
                  networkData:
                    description: NetworkData contains NoCloud inline cloud-init networkdata.
                    type: string
                  networkDataBase64:
                    description: NetworkDataBase64 contains NoCloud cloud-init networkdata
                      as a base64 encoded string.
                    type: string
                  networkDataSecretRef:
                    description: NetworkDataSecretRef references a k8s secret that
                      contains NoCloud networkdata.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: UserDataSecretRef references a k8s secret that contains
                      NoCloud userdata.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  userData:
                    description: UserData contains NoCloud inline cloud-init userdata.
                    type: string
                  userDataBase64:
                    description: UserDataBase64 contains NoCloud cloud-init userdata
                      as a base64 encoded string.
                    type: string
                type: object
              disks:
                items:
                  description: Represents the source of a volume to mount. Only one
                    of its members may be specified.
                  properties:
                    clusterImageSource:
                      description: ClusterImageSourceSource represents a reference
                        to a ClusterImageSource. Directly attached to the vmi via
                        qemu.
                      properties:
                        claimName:
                          description: 'claimName is the name of a PersistentVolumeClaim
                            in the same namespace as the pod using this volume. More
                            info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          type: string
                        hotpluggable:
                          description: Hotpluggable indicates whether the volume can
                            be hotplugged and hotunplugged.
                          type: boolean
                        name:
                          description: Name represents the name of the ClusterImageSource
                            in the same namespace
                          type: string
                        readOnly:
                          description: readOnly Will force the ReadOnly setting in
                            VolumeMounts. Default false.
                          type: boolean
                      required:
                      - claimName
                      - name
                      type: object
                    containerDisk:
                      description: 'ContainerDisk references a docker image, embedding
                        a qcow or raw disk. More info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html'
                      properties:
                        image:
                          description: Image is the name of the image with the embedded
                            disk.
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent
                            otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        imagePullSecret:
                          description: ImagePullSecret is the name of the Docker registry
                            secret required to pull the image. The secret must already
                            exist.
                          type: string
                        path:
                          description: Path defines the path to disk file in the container
                          type: string
                      required:
                      - image
                      type: object
                    dataVolume:
                      description: DataVolume represents the dynamic creation a PVC
                        for this volume as well as the process of populating that
                        PVC with a disk image.
                      properties:
                        hotpluggable:
                          description: Hotpluggable indicates whether the volume can
                            be hotplugged and hotunplugged.
                          type: boolean
                        name:
                          description: Name represents the name of the DataVolume
                            in the same namespace
                          type: string
                      required:
                      - name
                      type: object
                    emptyDisk:
                      description: 'EmptyDisk represents a temporary disk which shares
                        the vmis lifecycle. More info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html'
                      properties:
                        capacity:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Capacity of the sparse disk.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      required:
                      - capacity
                      type: object
                    ephemeral:
                      description: Ephemeral is a special volume source that "wraps"
                        specified source and provides copy-on-write image on top of
                        it.
                      properties:
                        persistentVolumeClaim:
                          description: 'PersistentVolumeClaimVolumeSource represents
                            a reference to a PersistentVolumeClaim in the same namespace.
                            Directly attached to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            claimName:
                              description: 'claimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: readOnly Will force the ReadOnly setting
                                in VolumeMounts. Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                      type: object
                    imageSource:
                      description: ImageSourceSource represents a reference to a ImageSource
                        in the same namespace. Directly attached to the vmi via qemu.
                      properties:
                        claimName:
                          description: 'claimName is the name of a PersistentVolumeClaim
                            in the same namespace as the pod using this volume. More
                            info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          type: string
                        hotpluggable:
                          description: Hotpluggable indicates whether the volume can
                            be hotplugged and hotunplugged.
                          type: boolean
                        name:
                          description: Name represents the name of the ClusterImageSource
                            in the same namespace
                          type: string
                        readOnly:
                          description: readOnly Will force the ReadOnly setting in
                            VolumeMounts. Default false.
                          type: boolean
                      required:
                      - claimName
                      - name
                      type: object
                    persistentVolumeClaim:
                      description: 'PersistentVolumeClaimVolumeSource represents a
                        reference to a PersistentVolumeClaim in the same namespace.
                        Directly attached to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                      properties:
                        claimName:
                          description: 'claimName is the name of a PersistentVolumeClaim
                            in the same namespace as the pod using this volume. More
                            info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          type: string
                        hotpluggable:
                          description: Hotpluggable indicates whether the volume can
                            be hotplugged and hotunplugged.
                          type: boolean
                        readOnly:
                          description: readOnly Will force the ReadOnly setting in
                            VolumeMounts. Default false.
                          type: boolean
                      required:
                      - claimName
                      type: object
                  type: object
                type: array
              resources:
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: Limits describes the maximum amount of compute resources
                      allowed. Valid resource keys are "memory" and "cpu".
                    type: object
                  overcommitGuestOverhead:
                    description: Don't ask the scheduler to take the guest-management
                      overhead into account. Instead put the overhead only into the
                      container's memory limit. This can lead to crashes if all memory
                      is in use on a node. Defaults to false.
                    type: boolean
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: Requests is a description of the initial vmi resources.
                      Valid resource keys are "memory" and "cpu".
                    type: object
                type: object
              running:
                type: boolean
            type: object
          status:
            description: VirtualMachineStatus defines the observed state of VirtualMachine
            properties:
              nodeName:
                description: NodeName is the name where the VirtualMachineInstance
                  is currently running.
                type: string
              phase:
                description: Phase is a human readable, high-level representation
                  of the status of the virtual machine
                type: string
              vmIP:
                description: IP address of Virtual Machine
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
